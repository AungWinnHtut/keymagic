$consA = 'uc*Ci' + \
		'pqZn' + \
		'#X!~P' + \
		"wx'" + \
		'"e' + \
		'yzAbr' + \
		',&vo' + \
		'[Vt' + \
		'1234567890' + \
		'EBO{]}' + \
		'?/NM\\'
$consU = u1000 + u1001 + u1002 + u1003 + u1004 + u1005 + u1006 + u1007 + u100A + u100B + u100C + u100D + u100E + u100F + u1010 + u1011 + u1012 + u1013 + u1014 + u1015 + u1016 + u1017 + u1018 + u1019 + u101A + u101B + u101C + u101E + u101F + u1020 + u1021 + u1041 + u1042 + u1043 + u1044 + u1045 + u1046 + u1047 + u1048 + u1049 + u1040 + u1023 + u1024 + u1025 + u1027 + u1029 + u102A + u104A + u104B + u104C + u104D + u104F
$conoU =  u1008 + u1009
$abvA = 'dDJ'
$abvU = u102D + u102E + u1032
$absA = 'H'
$absU = u1036
$blvA = 'klKL'
$blvU = u102F + u1030 + u102F + u1030
$blsA = 'h'
$blsU = u1037
$afvA = 'gm'
$afvU = u102B + u102C
$afsA = ';'
$afsU = u1038
$smvA = 'sjGS'
$smvU = u103B + u103C + u103D + u103E
$sgcU = u1001 + u1002 + u1004 + u1012 + u1015 + u101D
$zsve = u200B + u1031
$ra = u101B
$wa = u101D
$raha = u103B + u103E
$rawaha = u103B + u103D + u103E
$rawa = u103B + u103D
$waha = u103D + u103E
$yawa = u103C + u103D
$yaha = u103C + u103E

< VK_SHIFT & VK_KEY_Y > => NULL

//reorder while vowel + 0 or 7
$zsve + < VK_KEY_0 > => $wa + U1031
$zsve + < VK_KEY_7 > => $ra + U1031

U1025 + < VK_SHIFT & VK_KEY_D > => U1026
// mapping single consonants and vowels
$consA[*] => $consU[$1]
$abvA[*] => $abvU[$1]
$absA[*] => $absU[$1]
$blvA[*] => $blvU[$1]
$blsA[*] => $blsU[$1] 
$smvA[*] => $smvU[$1]
$afvA[*] => $afvU[$1]
$afsA[*] => $afsU[$1]

// outs zwsp + vowel E while pressing A
< VK_KEY_A > => $zsve
// reorder vowel E + any consonants and digits
$zsve + $consA[*] => $consU[$2] + U1031
// reorder vowel E + single medial Character ra, ya, wa and ha
U1031 + $smvA[*] => $smvU[$2] + U1031
// reorder medial Character(s) + vowel E + single medial Character ra, ya, wa and ha
$smvU[*] + U1031 + $smvA[*] => $smvU[$1] + $smvU[$3] + U1031 

// Stacked Characters
< VK_SHIFT & VK_KEY_2 > => U100F + U1039 + U100D
< VK_SHIFT & VK_CONTROL & VK_KEY_2 > => U1004 + U1039 + U100C
< VK_SHIFT & VK_BACKSLASH > => U100B + U1039 + U100C 

// medials combinations
< VK_SHIFT & VK_KEY_Q > => $raha
< VK_SHIFT & VK_KEY_W > => $rawaha
< VK_SHIFT & VK_KEY_R > => $rawa
< VK_SHIFT & VK_KEY_T > => $waha
< VK_SHIFT & VK_OEM_COMMA > => $yawa
< VK_SHIFT & VK_PRIOR > => $yaha

U103B + U1031 + < VK_SHIFT & VK_KEY_T > => U103B + $waha + U1031 
U103C + U1031 + < VK_SHIFT & VK_KEY_T > => U103C + $waha + U1031
U1031 + < VK_SHIFT & VK_KEY_T > => $waha + U1031
U1031 + < VK_SHIFT & VK_BACKSLASH > => U100B + U1039 + U100C + U1031

$blvU[*] + $abvA[*] => $abvU[$2] + $1
$blsU[*] + $abvA[*] => $abvU[$2] + $1
$absU[*] + $abvA[*] => $abvU[$2] + $1
$blsU[*] + $blvA[*] => $blvU[$2] + $1
$blsU[*] + $absA[*] => $absU[$2] + $1
$absU[*] + $blvA[*] => $blvU[$2] + $1
U1037 + < VK_KEY_F > => U103A + U1037

// Asat, Killer
< VK_KEY_F > => U103A
// Kinzi
< VK_SHIFT & VK_KEY_F > => U1004 + U103A + U1039 
// tall AA + Asat
< VK_SHIFT & VK_COLON > => U102B + U103A
// semi-vowel ha + vowel sign U
< VK_SHIFT & VK_KEY_I > => U103E + U102F  
// semi-vowel ha + vowel sign I + vowel sign U
U102D + < VK_SHIFT & VK_KEY_I > => U103E + U102D + U102F
U103E + U102F + < VK_KEY_D > => U103E + U102D + U102F
// vowel sign AA
< VK_KEY_M > => U102C
// some consonants + vowel sign AA => change tall vowel sign AA
$sgcU[*] + < VK_KEY_M >  => $sgcU[$1] + U102B
// consonants CA + semi-vowel ya > consonants JHA
U1005 + < VK_KEY_S > => U1008
< VK_SHIFT & VK_CONTROL & VK_KEY_N > => U1009
< VK_SHIFT & VK_CONTROL & VK_KEY_0 > => U101D

// stacked characters
< VK_SHIFT & VK_CONTROL & VK_KEY_U > => U1039 + U1000
< VK_SHIFT & VK_CONTROL & VK_KEY_C > => U1039 + U1001
< VK_SHIFT & VK_CONTROL & VK_KEY_8 > => U1039 + U1002
< VK_SHIFT & VK_ALT & VK_KEY_C > => U1039 + U1003
< VK_SHIFT & VK_CONTROL & VK_KEY_P > => U1039 + U1005
< VK_SHIFT & VK_CONTROL & VK_KEY_Q > => U1039 + U1006
< VK_SHIFT & VK_ALT & VK_KEY_Z > => U1039 + U1007
< VK_SHIFT & VK_CONTROL & VK_ALT & VK_KEY_P > => U1039 + U1008
< VK_SHIFT & VK_CONTROL & VK_KEY_N > => U1009
< VK_SHIFT & VK_CONTROL & VK_KEY_3 > => U1039 + U100B
< VK_SHIFT & VK_CONTROL & VK_CFLEX > => U100D + U1039 + U100E
< VK_SHIFT & VK_ALT & VK_KEY_P > => U1039 + U100F
< VK_SHIFT & VK_CONTROL & VK_KEY_W > => U1039 + U1010
< VK_SHIFT & VK_CONTROL & VK_KEY_X > => U1039 + U1011
< VK_SHIFT & VK_CONTROL & VK_QUOTE > => U1039 + U1012
< VK_SHIFT & VK_ALT & VK_QUOTE > => U1039 + U1013
< VK_SHIFT & VK_CONTROL & VK_KEY_E > => U1039 + U1014
< VK_SHIFT & VK_CONTROL & VK_KEY_Y > => U1039 + U1015
< VK_SHIFT & VK_CONTROL & VK_KEY_Z > => U1039 + U1016
< VK_SHIFT & VK_ALT & VK_KEY_A > => U1039 + U1017
< VK_SHIFT & VK_CONTROL & VK_KEY_B > => U1039 + U1018
< VK_SHIFT & VK_CONTROL & VK_KEY_R > => U1039 + U1019
< VK_SHIFT & VK_CONTROL & VK_OEM_COMMA > => U1039 + U101A
< VK_SHIFT & VK_CONTROL & VK_KEY_7 > => U1039 + U101B
< VK_SHIFT & VK_CONTROL & VK_KEY_V > => U1039 + U101C
< VK_SHIFT & VK_CONTROL & VK_KEY_O > => U1039 + U101E
< VK_SHIFT & VK_ALT & VK_KEY_O > => U103F
< VK_SHIFT & VK_CONTROL & VK_KEY_T > => U1039 + U1021

< VK_OEM_1 > => U1038

$consU[*] + u1031 + < VK_BACK > => $zsve 
$conoU[*] + u1031 + < VK_BACK > => $zsve 
$smvU[*] + u1031 + < VK_BACK > => u1031
$smvU[*] + $smvU[*] + u1031 + < VK_BACK > => u1031
$smvU[*] + $smvU[*] + $smvU[*] + u1031 + < VK_BACK > => u1031
u100B + u1039 + u100C + < VK_BACK > => NULL 
u100B + u1039 + u100C + u1031 + < VK_BACK > => u1031 
u100F + u1039 + u100D + < VK_BACK > => NULL

$raha + < VK_BACK > => NULL
$rawaha + < VK_BACK > => NULL  
$rawa + < VK_BACK > => NULL
$waha + < VK_BACK > => NULL 
$yawa + < VK_BACK > => NULL
$yaha + < VK_BACK > => NULL
$zsve + < VK_BACK > => NULL

u1004 + u103A + u1039 + < VK_BACK > => NULL    
u102B + u103A + < VK_BACK > => NULL
u103E + u102D + u102F + < VK_BACK > => u103E + u102D 
u1039 + $consU[*] + < VK_BACK > => NULL 


// Wa * Zero Checking
u1040 + $abvA[*] => $wa + $abvU[$2]
u1040 + $absA[*] => $wa + $absU[$2]
u1040 + $blvA[*] => $wa + $blvU[$2]
u1040 + $blsA[*] => $wa + $blsU[$2]
u1040 + < VK_KEY_M > => $wa + u102B
u1040 + < VK_KEY_G > => $wa + u102B
u1040 + $afsA[*] => $wa + $afsU[$2]
u1040 + $smvA[*] => $wa + $smvU[$2]
u1040 + < VK_SHIFT & VK_KEY_Q > => $wa + $raha 
u1040 + < VK_SHIFT & VK_KEY_W > => $wa + $rawaha 
u1040 + < VK_SHIFT & VK_KEY_R > => $wa + $rawa 
u1040 + < VK_SHIFT & VK_KEY_T > => $wa + $waha 
u1040 + < VK_KEY_F > => $wa + u1039
u1040 + < VK_SHIFT & VK_OEM_COMMA > => $wa + $yawa 
u1040 + < VK_SHIFT & VK_PRIOR > => $wa + $yaha 

// Ra * Seven Checking
u1047 + $abvA[*] => $ra + $abvU[$2]
u1047 + $absA[*] => $ra + $absU[$2]
u1047 + $blvA[*] => $ra + $blvU[$2]
u1047 + $blsA[*] => $ra + $blsU[$2]
u1047 + $afvA[*] => $ra + $afvU[$2]
u1047 + $afsA[*] => $ra + $afsU[$2]
u1047 + $smvA[*] => $ra + $smvU[$2]
u1047 + < VK_SHIFT & VK_KEY_Q > => $ra + $raha 
u1047 + < VK_SHIFT & VK_KEY_W > => $ra + $rawaha 
u1047 + < VK_SHIFT & VK_KEY_R > => $ra + $rawa 
u1047 + < VK_SHIFT & VK_KEY_R > => $ra + $waha 
u1047 + < VK_KEY_F > => $ra + u1039
u1047 + < VK_SHIFT & VK_OEM_COMMA > => $ra + $yawa 
u1047 + < VK_SHIFT & VK_PRIOR > => $ra + $yaha 

// EOF