# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# vim:set noet ts=4:
#
# ibus-anthy - The Anthy engine for IBus
#
# Copyright (c) 2007-2008 Huang Peng <shawn.p.huang@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.



pkgdatadir = $(datadir)/ibus-tmpl
pkgincludedir = $(includedir)/ibus-tmpl
pkglibdir = $(libdir)/ibus-tmpl
pkglibexecdir = $(libexecdir)/ibus-tmpl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
libexec_PROGRAMS = ibus-engine-enchant$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/enchant.xml.in.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-version.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = enchant.xml.in
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(libexecdir)" \
	"$(DESTDIR)$(componentdir)"
PROGRAMS = $(libexec_PROGRAMS)
am_ibus_engine_enchant_OBJECTS = ibus_engine_enchant-main.$(OBJEXT) \
	ibus_engine_enchant-engine.$(OBJEXT) \
	ibus_engine_enchant-KeyMagicEngine.$(OBJEXT) \
	ibus_engine_enchant-KeyMagicString.$(OBJEXT) \
	ibus_engine_enchant-KeyMagicKeyboard.$(OBJEXT) \
	ibus_engine_enchant-KeyMagicLogger.$(OBJEXT) \
	ibus_engine_enchant-RuleInfo.$(OBJEXT) \
	ibus_engine_enchant-KeyCodes.$(OBJEXT)
ibus_engine_enchant_OBJECTS = $(am_ibus_engine_enchant_OBJECTS)
ibus_engine_enchant_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
ibus_engine_enchant_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) \
	$(ibus_engine_enchant_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(ibus_engine_enchant_SOURCES)
DIST_SOURCES = $(ibus_engine_enchant_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
DATA = $(component_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/thantthetkz/codes/ibus-tmpl/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/thantthetkz/codes/ibus-tmpl/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/thantthetkz/codes/ibus-tmpl/missing --run autoconf
AUTOHEADER = ${SHELL} /home/thantthetkz/codes/ibus-tmpl/missing --run autoheader
AUTOMAKE = ${SHELL} /home/thantthetkz/codes/ibus-tmpl/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O0
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O0
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENCHANT_CFLAGS = -pthread -I/usr/include/enchant -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
ENCHANT_LIBS = -pthread -lenchant -lgmodule-2.0 -lrt -lglib-2.0  
EXEEXT = 
FGREP = /bin/grep -F
GETTEXT_PACKAGE = ibus-tmpl
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /bin/grep
IBUS_CFLAGS = -pthread -I/usr/include/ibus-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
IBUS_LIBS = -pthread -libus -lgobject-2.0 -lgthread-2.0 -lrt -lglib-2.0  
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LD = /usr/bin/ld
LDFLAGS = 
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/thantthetkz/codes/ibus-tmpl/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ibus-tmpl
PACKAGE_BUGREPORT = http://code.google.com/p/ibus/issues/entry
PACKAGE_NAME = ibus-tmpl
PACKAGE_STRING = ibus-tmpl 1.2.99.20110127
PACKAGE_TARNAME = ibus-tmpl
PACKAGE_URL = 
PACKAGE_VERSION = 1.2.99.20110127
PACKAGE_VERSION_MAJOR = 1
PACKAGE_VERSION_MICRO = 99
PACKAGE_VERSION_MINOR = 2
PACKAGE_VERSION_NANO = 20110127
PACKAGE_VERSION_RELEASE = 0.20110201.032736
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = po
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.6
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VERSION = 1.2.99.20110127
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
abs_builddir = /home/thantthetkz/codes/ibus-tmpl/src
abs_srcdir = /home/thantthetkz/codes/ibus-tmpl/src
abs_top_builddir = /home/thantthetkz/codes/ibus-tmpl
abs_top_srcdir = /home/thantthetkz/codes/ibus-tmpl
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/thantthetkz/codes/ibus-tmpl/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/ibus-tmpl
pkgpythondir = ${pythondir}/ibus-tmpl
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.6/dist-packages
pythondir = ${prefix}/lib/python2.6/dist-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
ibus_engine_enchant_SOURCES = \
	main.cpp \
	engine.cpp \
	engine.h \
	KeyMagicEngine.h \
	KeyMagicEngine.cpp \
	KeyMagicString.h \
	KeyMagicString.cpp \
	KeyMagicKeyboard.h \
	KeyMagicKeyboard.cpp \
	KeyMagicLogger.h \
	KeyMagicLogger.cpp \
	RuleInfo.h \
	RuleInfo.cpp \
	KeyCodes.h \
	KeyCodes.cpp \
	KeyMagicTypes.h \
	$(NULL)

ibus_engine_enchant_CXXFLAGS = \
	-pthread -I/usr/include/ibus-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include   \
	-pthread -I/usr/include/enchant -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include   \
	-DPKGDATADIR=\"$(pkgdatadir)\"

ibus_engine_enchant_LDFLAGS = \
	-pthread -libus -lgobject-2.0 -lgthread-2.0 -lrt -lglib-2.0   \
	-pthread -lenchant -lgmodule-2.0 -lrt -lglib-2.0  

component_DATA = \
	enchant.xml \
	$(NULL)

componentdir = ${datarootdir}/ibus/component
EXTRA_DIST = \
	enchant.xml.in \
	$(NULL)

CLEANFILES = \
	enchant.xml \
	$(NULL)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
enchant.xml.in: $(top_builddir)/config.status $(srcdir)/enchant.xml.in.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libexecPROGRAMS: $(libexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(libexecdir)" || $(MKDIR_P) "$(DESTDIR)$(libexecdir)"
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(libexecdir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(libexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-libexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libexecdir)" && rm -f $$files

clean-libexecPROGRAMS:
	@list='$(libexec_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
ibus-engine-enchant$(EXEEXT): $(ibus_engine_enchant_OBJECTS) $(ibus_engine_enchant_DEPENDENCIES) 
	@rm -f ibus-engine-enchant$(EXEEXT)
	$(AM_V_CXXLD)$(ibus_engine_enchant_LINK) $(ibus_engine_enchant_OBJECTS) $(ibus_engine_enchant_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ibus_engine_enchant-KeyCodes.Po
include ./$(DEPDIR)/ibus_engine_enchant-KeyMagicEngine.Po
include ./$(DEPDIR)/ibus_engine_enchant-KeyMagicKeyboard.Po
include ./$(DEPDIR)/ibus_engine_enchant-KeyMagicLogger.Po
include ./$(DEPDIR)/ibus_engine_enchant-KeyMagicString.Po
include ./$(DEPDIR)/ibus_engine_enchant-RuleInfo.Po
include ./$(DEPDIR)/ibus_engine_enchant-engine.Po
include ./$(DEPDIR)/ibus_engine_enchant-main.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

ibus_engine_enchant-main.o: main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-main.o -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-main.Tpo -c -o ibus_engine_enchant-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-main.Tpo $(DEPDIR)/ibus_engine_enchant-main.Po
#	$(AM_V_CXX) \
#	source='main.cpp' object='ibus_engine_enchant-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

ibus_engine_enchant-main.obj: main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-main.obj -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-main.Tpo -c -o ibus_engine_enchant-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-main.Tpo $(DEPDIR)/ibus_engine_enchant-main.Po
#	$(AM_V_CXX) \
#	source='main.cpp' object='ibus_engine_enchant-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

ibus_engine_enchant-engine.o: engine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-engine.o -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-engine.Tpo -c -o ibus_engine_enchant-engine.o `test -f 'engine.cpp' || echo '$(srcdir)/'`engine.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-engine.Tpo $(DEPDIR)/ibus_engine_enchant-engine.Po
#	$(AM_V_CXX) \
#	source='engine.cpp' object='ibus_engine_enchant-engine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-engine.o `test -f 'engine.cpp' || echo '$(srcdir)/'`engine.cpp

ibus_engine_enchant-engine.obj: engine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-engine.obj -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-engine.Tpo -c -o ibus_engine_enchant-engine.obj `if test -f 'engine.cpp'; then $(CYGPATH_W) 'engine.cpp'; else $(CYGPATH_W) '$(srcdir)/engine.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-engine.Tpo $(DEPDIR)/ibus_engine_enchant-engine.Po
#	$(AM_V_CXX) \
#	source='engine.cpp' object='ibus_engine_enchant-engine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-engine.obj `if test -f 'engine.cpp'; then $(CYGPATH_W) 'engine.cpp'; else $(CYGPATH_W) '$(srcdir)/engine.cpp'; fi`

ibus_engine_enchant-KeyMagicEngine.o: KeyMagicEngine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-KeyMagicEngine.o -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-KeyMagicEngine.Tpo -c -o ibus_engine_enchant-KeyMagicEngine.o `test -f 'KeyMagicEngine.cpp' || echo '$(srcdir)/'`KeyMagicEngine.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-KeyMagicEngine.Tpo $(DEPDIR)/ibus_engine_enchant-KeyMagicEngine.Po
#	$(AM_V_CXX) \
#	source='KeyMagicEngine.cpp' object='ibus_engine_enchant-KeyMagicEngine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-KeyMagicEngine.o `test -f 'KeyMagicEngine.cpp' || echo '$(srcdir)/'`KeyMagicEngine.cpp

ibus_engine_enchant-KeyMagicEngine.obj: KeyMagicEngine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-KeyMagicEngine.obj -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-KeyMagicEngine.Tpo -c -o ibus_engine_enchant-KeyMagicEngine.obj `if test -f 'KeyMagicEngine.cpp'; then $(CYGPATH_W) 'KeyMagicEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyMagicEngine.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-KeyMagicEngine.Tpo $(DEPDIR)/ibus_engine_enchant-KeyMagicEngine.Po
#	$(AM_V_CXX) \
#	source='KeyMagicEngine.cpp' object='ibus_engine_enchant-KeyMagicEngine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-KeyMagicEngine.obj `if test -f 'KeyMagicEngine.cpp'; then $(CYGPATH_W) 'KeyMagicEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyMagicEngine.cpp'; fi`

ibus_engine_enchant-KeyMagicString.o: KeyMagicString.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-KeyMagicString.o -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-KeyMagicString.Tpo -c -o ibus_engine_enchant-KeyMagicString.o `test -f 'KeyMagicString.cpp' || echo '$(srcdir)/'`KeyMagicString.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-KeyMagicString.Tpo $(DEPDIR)/ibus_engine_enchant-KeyMagicString.Po
#	$(AM_V_CXX) \
#	source='KeyMagicString.cpp' object='ibus_engine_enchant-KeyMagicString.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-KeyMagicString.o `test -f 'KeyMagicString.cpp' || echo '$(srcdir)/'`KeyMagicString.cpp

ibus_engine_enchant-KeyMagicString.obj: KeyMagicString.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-KeyMagicString.obj -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-KeyMagicString.Tpo -c -o ibus_engine_enchant-KeyMagicString.obj `if test -f 'KeyMagicString.cpp'; then $(CYGPATH_W) 'KeyMagicString.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyMagicString.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-KeyMagicString.Tpo $(DEPDIR)/ibus_engine_enchant-KeyMagicString.Po
#	$(AM_V_CXX) \
#	source='KeyMagicString.cpp' object='ibus_engine_enchant-KeyMagicString.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-KeyMagicString.obj `if test -f 'KeyMagicString.cpp'; then $(CYGPATH_W) 'KeyMagicString.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyMagicString.cpp'; fi`

ibus_engine_enchant-KeyMagicKeyboard.o: KeyMagicKeyboard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-KeyMagicKeyboard.o -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-KeyMagicKeyboard.Tpo -c -o ibus_engine_enchant-KeyMagicKeyboard.o `test -f 'KeyMagicKeyboard.cpp' || echo '$(srcdir)/'`KeyMagicKeyboard.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-KeyMagicKeyboard.Tpo $(DEPDIR)/ibus_engine_enchant-KeyMagicKeyboard.Po
#	$(AM_V_CXX) \
#	source='KeyMagicKeyboard.cpp' object='ibus_engine_enchant-KeyMagicKeyboard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-KeyMagicKeyboard.o `test -f 'KeyMagicKeyboard.cpp' || echo '$(srcdir)/'`KeyMagicKeyboard.cpp

ibus_engine_enchant-KeyMagicKeyboard.obj: KeyMagicKeyboard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-KeyMagicKeyboard.obj -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-KeyMagicKeyboard.Tpo -c -o ibus_engine_enchant-KeyMagicKeyboard.obj `if test -f 'KeyMagicKeyboard.cpp'; then $(CYGPATH_W) 'KeyMagicKeyboard.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyMagicKeyboard.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-KeyMagicKeyboard.Tpo $(DEPDIR)/ibus_engine_enchant-KeyMagicKeyboard.Po
#	$(AM_V_CXX) \
#	source='KeyMagicKeyboard.cpp' object='ibus_engine_enchant-KeyMagicKeyboard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-KeyMagicKeyboard.obj `if test -f 'KeyMagicKeyboard.cpp'; then $(CYGPATH_W) 'KeyMagicKeyboard.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyMagicKeyboard.cpp'; fi`

ibus_engine_enchant-KeyMagicLogger.o: KeyMagicLogger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-KeyMagicLogger.o -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-KeyMagicLogger.Tpo -c -o ibus_engine_enchant-KeyMagicLogger.o `test -f 'KeyMagicLogger.cpp' || echo '$(srcdir)/'`KeyMagicLogger.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-KeyMagicLogger.Tpo $(DEPDIR)/ibus_engine_enchant-KeyMagicLogger.Po
#	$(AM_V_CXX) \
#	source='KeyMagicLogger.cpp' object='ibus_engine_enchant-KeyMagicLogger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-KeyMagicLogger.o `test -f 'KeyMagicLogger.cpp' || echo '$(srcdir)/'`KeyMagicLogger.cpp

ibus_engine_enchant-KeyMagicLogger.obj: KeyMagicLogger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-KeyMagicLogger.obj -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-KeyMagicLogger.Tpo -c -o ibus_engine_enchant-KeyMagicLogger.obj `if test -f 'KeyMagicLogger.cpp'; then $(CYGPATH_W) 'KeyMagicLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyMagicLogger.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-KeyMagicLogger.Tpo $(DEPDIR)/ibus_engine_enchant-KeyMagicLogger.Po
#	$(AM_V_CXX) \
#	source='KeyMagicLogger.cpp' object='ibus_engine_enchant-KeyMagicLogger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-KeyMagicLogger.obj `if test -f 'KeyMagicLogger.cpp'; then $(CYGPATH_W) 'KeyMagicLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyMagicLogger.cpp'; fi`

ibus_engine_enchant-RuleInfo.o: RuleInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-RuleInfo.o -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-RuleInfo.Tpo -c -o ibus_engine_enchant-RuleInfo.o `test -f 'RuleInfo.cpp' || echo '$(srcdir)/'`RuleInfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-RuleInfo.Tpo $(DEPDIR)/ibus_engine_enchant-RuleInfo.Po
#	$(AM_V_CXX) \
#	source='RuleInfo.cpp' object='ibus_engine_enchant-RuleInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-RuleInfo.o `test -f 'RuleInfo.cpp' || echo '$(srcdir)/'`RuleInfo.cpp

ibus_engine_enchant-RuleInfo.obj: RuleInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-RuleInfo.obj -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-RuleInfo.Tpo -c -o ibus_engine_enchant-RuleInfo.obj `if test -f 'RuleInfo.cpp'; then $(CYGPATH_W) 'RuleInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/RuleInfo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-RuleInfo.Tpo $(DEPDIR)/ibus_engine_enchant-RuleInfo.Po
#	$(AM_V_CXX) \
#	source='RuleInfo.cpp' object='ibus_engine_enchant-RuleInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-RuleInfo.obj `if test -f 'RuleInfo.cpp'; then $(CYGPATH_W) 'RuleInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/RuleInfo.cpp'; fi`

ibus_engine_enchant-KeyCodes.o: KeyCodes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-KeyCodes.o -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-KeyCodes.Tpo -c -o ibus_engine_enchant-KeyCodes.o `test -f 'KeyCodes.cpp' || echo '$(srcdir)/'`KeyCodes.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-KeyCodes.Tpo $(DEPDIR)/ibus_engine_enchant-KeyCodes.Po
#	$(AM_V_CXX) \
#	source='KeyCodes.cpp' object='ibus_engine_enchant-KeyCodes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-KeyCodes.o `test -f 'KeyCodes.cpp' || echo '$(srcdir)/'`KeyCodes.cpp

ibus_engine_enchant-KeyCodes.obj: KeyCodes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -MT ibus_engine_enchant-KeyCodes.obj -MD -MP -MF $(DEPDIR)/ibus_engine_enchant-KeyCodes.Tpo -c -o ibus_engine_enchant-KeyCodes.obj `if test -f 'KeyCodes.cpp'; then $(CYGPATH_W) 'KeyCodes.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyCodes.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ibus_engine_enchant-KeyCodes.Tpo $(DEPDIR)/ibus_engine_enchant-KeyCodes.Po
#	$(AM_V_CXX) \
#	source='KeyCodes.cpp' object='ibus_engine_enchant-KeyCodes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ibus_engine_enchant_CXXFLAGS) $(CXXFLAGS) -c -o ibus_engine_enchant-KeyCodes.obj `if test -f 'KeyCodes.cpp'; then $(CYGPATH_W) 'KeyCodes.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyCodes.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-componentDATA: $(component_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(componentdir)" || $(MKDIR_P) "$(DESTDIR)$(componentdir)"
	@list='$(component_DATA)'; test -n "$(componentdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(componentdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(componentdir)" || exit $$?; \
	done

uninstall-componentDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(component_DATA)'; test -n "$(componentdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(componentdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(componentdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(libexecdir)" "$(DESTDIR)$(componentdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libexecPROGRAMS clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-componentDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libexecPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-componentDATA uninstall-libexecPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libexecPROGRAMS clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-componentDATA install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libexecPROGRAMS install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-componentDATA uninstall-libexecPROGRAMS

	$(NULL)
	$(NULL)

enchant.xml: enchant.xml.in
	$(AM_V_GEN) \
	( \
		libexecdir=${libexecdir}; \
		pkgdatadir=${pkgdatadir}; \
		s=`cat $<`; \
		eval "echo \"$${s}\""; \
	) > $@

test: ibus-engine-enchant
	$(builddir)/ibus-engine-enchant

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
